/**
 * Holds the folder, fileName and specFileName:
 *
 * @example for `./my/example/example.component.ts`
 * {
 *  folderPathRaw: './my/example/',
 *  folderPath: './my/example/,
 *  fileName: 'example.component.ts'
 *  specFileName: 'example.component.spec.ts'
 * }
 *
 * @example for `.\my\example\example.component.ts`
 * {
 *  folderPathRaw: '.\my\example\',,
 *  folderPath: './my/example/,
 *  testTarge
 *  fileName: 'example.component.ts',
 *  specFileName: 'example.component.spec.ts',
 * }
 *
 */
export declare type Paths = {
    /**
     * The file name path excluded
     * @example
     * --name = ./example/example.component.ts -> `example.component.spec.ts`
     */
    specFileName: string;
    /**
     * Import path with normalized slashes (/ and \ according to local OS)
     * @example
     * --name = ./example/example.component.ts -> `example.component` (notice the lack of extension)
     */
    fileName: string;
    /**
      * The folder containing the target under test, verbatim as the user specified.
      *
      * @example
      * --name = ./example/example.component.ts -> ./example/example.component
      *
      * @example
      * --name = .\example\example.component.ts -> .\example\example.component
      */
    folderPathRaw: string;
    /**
      * The folder containing the target under test, normalized to forward slash path.
      *
      * @example
      * --name = .\example\example.component.ts -> ./example/example.component
      *
      */
    folderPathNormal: string;
};
export declare function paths(name: string): Paths;
